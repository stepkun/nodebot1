#!/usr/bin/env python3


import rclpy
from rclpy.node import Node

from geometry_msgs.msg import Twist


class Control(Node):
    '''
    Main control node for nodebot1.
    Propagates cmd_vel command for nodebot1 to nodebot1's chassis.

    '''
    def __init__(self):
        super().__init__('control')
        # subscription for cmd_vel in namespace of nodebot1
        self.subscription = self.create_subscription(
            Twist,
            '/nodebot1/cmd_vel',
            self.listener_callback,
            10)

        self.subscription  # prevent unused variable warning
        # publisher for cmd_vel in namespace chassis
        self.publisher = self.create_publisher(Twist, '/nodebot1/chassis/cmd_vel', 10)


    def listener_callback(self, msg):
        self.get_logger().debug('/nodebot1/cmd_vel: "%s"' % msg)
        # re-publish received cmd_vel message
        self.publisher.publish(msg)



def main(args=None):
    rclpy.init(args=args)

    control = Control()

    rclpy.spin(control)

    # Destroy the node explicitly
    # (optional - otherwise it will be done automatically
    # when the garbage collector destroys the node object)
    control.destroy_node()
    rclpy.shutdown()



if __name__ == '__main__':
    main()
